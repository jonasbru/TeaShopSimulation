###################################################
#    _____                 _                      #
#		/__   \___  __ _   ___| |__   ___  _ __       #
#			/ /\/ _ \/ _` | / __| '_ \ / _ \| '_ \      #
#		 / / |  __/ (_| | \__ \ | | | (_) | |_) |     #
#		 \/   \___|\__,_| |___/_| |_|\___/| .__/      #
#                                  		|_|         #
#                Documentation                    #
#                                                 #
#                 Michael Fagno                   #
#              		Jonas Bru                       #
###################################################

1) Overview of the solution

	 -Classes-
	 TeaShop : Main class, creates the Owner, the Chef and the Door, and sets the alarms.
	 Door: Creates the clients after a given time. Waits until the client notifies to the door that he entered the tea shop and has said hello to the owner before creating another client or sending the message "doorClosed" to the owner. This behaviour prevents that, at the end, the owner leaves the shop when there was still a customer inside the shop, but who hasn't said hello yet to the owner.
	 Client  : The first thing that the client does is saying hello to the owner, waits for his answer, and notifies the door that he's inside the shop. Then until he reaches his maximum number of teas (or one of his teas orders gets refused), he orders a tea, and takes some time to drink it. If he hears the last order call, the client has 50% chances to immediatly finish his tea and order a last one. If after the last order call a client doesn't order immediatly another tea, the client is polite enough no not order another tea after finishing his own tea if the shop is still open. If a client enters the shop after the last order call but before the closing time, he's not aware of the last order call so he will order a tea.
	 Chef    : When a client asks for a tea, serves it. When he receives the closingTime signal, he notifies the owner that he leaves, and leaves the tea shop.
	 Owner   : Answers to the hello and goodbye messages from the clients, and knows at every moment how many clients are in the shop. Like the chef, serves tea. When he receives the lastOrder signal from the clock, finishes serving the pending teas orders and sends a lastOrder signal to each customer in the shop. When he receives the closingTime signal, finishes the teas orders that were emitted before the closingTime signal (but not the ones emitted after), and then goes close the door. Does not leave the shop until there are no more clients, and the chef leaved.
	 
2) Deadlocks ?
	
	Of course not ! Hell yeah.
	 
	 
	 
	
	



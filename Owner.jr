import java.util.List;
import java.util.ArrayList;

public class Owner {

	private List<Client> clientList = new ArrayList<Client>();

	// Stats
	private int nbClientCreated = 0;
	private int nbRefusedOrder = 0;
	private int nbAcceptedOrder = 0;
	
	private process processOrders {
		Thread.currentThread().setName("Owner");
		
		TeaShop.print("Owner ready.");
		send TeaShop.open();

		boolean run = true;
		boolean timeToClose = false;
		
		int remainingCustomers = 0;
		
		boolean sendDoorClosed = false;

		while (run) {
			inni void TeaShop.closingTimeOwner() {
				timeToClose = true;
				remainingCustomers = TeaShop.aTeaPlease.length();
				TeaShop.print("It's closing time ! " + remainingCustomers + " remaining customers waiting for a tea");
				
			} [] void TeaShop.lastOrderForOwner() st TeaShop.aTeaPlease.length() == 0 && TeaShop.closingTimeOwner.length() == 0 {
					TeaShop.print("Ding Ding !! Last order time !");
					for(Client c : clientList) {
						send TeaShop.lastOrder();
					}
				
			} [] void TeaShop.hello(Client client) {
				clientList.add(client);
				TeaShop.print("Hello " + client.id + ". (" + clientList.size() + " customers in the shop)");
				nbClientCreated++;
				
			} [] void TeaShop.goodbye(Client client) {
				clientList.remove(client);
				TeaShop.print("Goodbye " + client.id + ". (" + clientList.size() + " customers left in the shop)");
				
			} [] boolean TeaShop.aTeaPlease(Client client) st TeaShop.closingTimeOwner.length() == 0 {
				//TeaShop.print("Preparing a tea for " + client.id);
				
				TeaShop.clock.delay(2);
				
				if(!timeToClose) {
					TeaShop.print("Serving a tea to " + client.id);
					nbAcceptedOrder++;
					return true;
					
				} else if(timeToClose && remainingCustomers > 0) {
					TeaShop.print("Serving one of the last teas to " + client.id);
					remainingCustomers--;
					nbAcceptedOrder++;				
					return true;
					
				} else {
					TeaShop.print("Sorry " + client.id + ", you ordered your tea after the closing hours");
					nbRefusedOrder++;
					return false;
				}				
				
			} [] void TeaShop.doorClosed() st clientList.size() == 0 {
				int nbTeaServedByChef;				
				receive TeaShop.byeOwner(nbTeaServedByChef);
				nbAcceptedOrder += nbTeaServedByChef;
				TeaShop.print("No more customers, the owner closes the shop !!");
				run = false;
				printStats();
				send TeaShop.clock.shutdown();
				
			} [] else {
				if(timeToClose && !sendDoorClosed) {
					send TeaShop.close();
					sendDoorClosed = true;
				}
			}
		}
	}
	
	protected void printStats(){
			TeaShop.print("");
			TeaShop.print("####### STATS OF TODAY #######");
			TeaShop.print("Number of clients: " + nbClientCreated); 
			TeaShop.print("Accepted orders: " + nbAcceptedOrder); 
			TeaShop.print("Refused orders: " + nbRefusedOrder);
			TeaShop.print("##############################");
				
	}
}


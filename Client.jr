import java.util.*;

public class Client {

	public int id;
	public op void stopDrink();
	protected int nbTea;
	protected boolean drinking = false;
	protected boolean lastTea = false;
	protected final int drinkingTime = 500; // in seconds
	
	// param:
	// id: id of the client
	// nbTea: maximum number of tea to drink 
	public Client(int id, int nbTea){
		this.id = id;
		this.nbTea = nbTea;
		
	}

	private process client{
		Thread.currentThread().setName("Client " + id);

		//We enter in the tea shop		
		TeaShop.print("Hello !");
		call TeaShop.hello(this);
		send TeaShop.doorPassed(); // Prevent the "Door" that the owner know the client
		
		int teadrunk=0;
		boolean haveToleave = false;
 
		while (teadrunk < nbTea && !haveToleave){
			//Asking for a tea
			TeaShop.print("I would like a cup of tea, please!");
			haveToleave = ! TeaShop.aTeaPlease(this);			

			if(!haveToleave){ // If the owner gives a tea
				TeaShop.clock.setAlarm(stopDrink,new MyTime(drinkingTime));// Starts the alarm for stop drinking
				drinking = true;

				while(drinking){ //Drink the tea
					inni void stopDrink() {
						drinking = false;
					} [] void TeaShop.lastOrder() {
						//Some client want to order a last drink so they instantly finish their tea
						drinking = randomBoolean();
						if(drinking == false){
							lastTea = true;
						}else{
							haveToleave = true;//no more drink
						}
					}
				}

				TeaShop.print("Tea finished!!");
				teadrunk++;

				//If the client has order a tea for the lastOrder
				if(lastTea){
					TeaShop.print("I would like a last cup of tea, please!");
					// We can delay here because no one will emit more signal to the client (after the last order).
					TeaShop.clock.delay(drinkingTime); 
					haveToleave = true;
					teadrunk++;
				}
			}
		}	
		TeaShop.print("Goodbye!");
		send TeaShop.goodbye(this);
	} 

	private boolean randomBoolean(){
		if(Math.random()> 0.5f ){
			return true;
		}
		return false;
	}
}

